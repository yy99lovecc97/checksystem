<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">

<struts>
    <!--配置常量-->
    <constant name="struts.custom.i18n.resources" value="resource"></constant>
    <constant name="struts.i18n.encoding" value="UTF-8"></constant>
    <!--开发者模式-->
    <constant name="struts.devMode" value="true"></constant>
    <!--放行静态资源-->
    <constant name="struts.action.excludePattern" value="/static/.*" />
    <package name="default" extends="struts-default">
        <interceptors>
            <!-- 配置普通员工角色的权限检查拦截器 -->
            <interceptor name="empAuth" class="action.authority.EmpAuthorityInterceptor"></interceptor>
            <!--配置经理角色的权限检查器-->
            <interceptor name="mgrAuth" class="action.authority.MgrAuthorityInterceptor"></interceptor>
            <!-- 配置普通员工的默认的拦截器栈 -->
            <interceptor-stack name="empStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="empAuth"/>
            </interceptor-stack>
            <!-- 配置经理的默认的拦截器栈 -->
            <interceptor-stack name="mgrStack">
                <interceptor-ref name="defaultStack"/>
                <interceptor-ref name="mgrAuth"/>
            </interceptor-stack>
        </interceptors>
        <!-- 定义全局Result映射 -->
        <global-results>
            <!-- 定义sql、root两个异常对应的视图页 -->
            <result name="business">/WEB-INF/content/error.jsp</result>
            <result name="root">/WEB-INF/content/error.jsp</result>
            <!-- 定义login逻辑视图对应的视图资源 -->
            <result name="login">/WEB-INF/content/login.jsp</result>
        </global-results>
        <!-- 定义全局异常映射 -->
        <global-exception-mappings>
            <!-- 当Action中遇到HrException异常时，
                系统将转入name为business的结果中 -->
            <exception-mapping
                    exception="exception.HrExecption"
                    result="business"/>
            <!-- 当Action中遇到Exception异常时，
                系统将转入name为root的结果中 -->
            <exception-mapping exception="java.lang.Exception"
                               result="root"/>
        </global-exception-mappings>
        <!--==================员工角色action================-->
        <!--定义登出请求的action-->
        <action name="logout" class="action.LogoutAction">
            <result>/WEB-INF/content/logout.jsp</result>
        </action>
        <!--登录系统的action-->
        <action name="processLogin" class="action.LoginAction" method="execute">
            <result name="input">/WEB-INF/content/login.jsp</result>
            <result name="mgr">/WEB-INF/content/manager/index.jsp</result>
            <result name="emp">/WEB-INF/content/employee/index.jsp</result>
            <result name="error">/WEB-INF/content/login.jsp</result>
        </action>
        <!--进入打卡-->
        <action name="*Punch" class="action.PunchAction">
            <interceptor-ref name="empStack"></interceptor-ref>
            <result name="success">/WEB-INF/content/{1}/punch.jsp</result>
        </action>
        <!--处理上班打卡-->
        <action name="*Come" method="come" class="action.ProcessPunchAction">
            <interceptor-ref name="empStack"></interceptor-ref>
            <result>/WEB-INF/content/{1}/index.jsp</result>
        </action>
        <!--处理下班打卡-->
        <action name="*Leave" method="leave" class="action.ProcessPunchAction">
            <interceptor-ref name="empStack"></interceptor-ref>
            <result>/WEB-INF/content/{1}/index.jsp</result>
        </action>
        <!--进入异动申请-->
        <action name="appChange" class="action.AppChangeAction">
            <!--messages, errors 和 field errors消息保存到 session 中-->
            <interceptor-ref name="store">
                <!--拦截器会把 “消息” 从 session 中取出来, 放入 Action 中-->
                <!--AUTOMATIC: MessageStoreInterceptor 拦截器会把 “消息” 从 session 中取出来, 放入 Action 中.
                 而且若响应结果的类型的 redirect, Action 中的 “消息” 会被放入 session 中.-->
                <param name="operationMode">RETRIEVE</param>
            </interceptor-ref>
            <result>/WEB-INF/content/employee/appChange.jsp</result>
        </action>
        <!--提交异动申请-->
        <action name="processApp" class="action.ProcessAppAction">
            <interceptor-ref name="store">
                <!--拦截器会把 “消息” 放入 session 域中-->
                <param name="operationMode">STORE</param>
            </interceptor-ref>
            <interceptor-ref name="empStack"></interceptor-ref>
            <result name="input" type="redirect">
                /appChange.action?attid=${attId}</result>
            <result>/WEB-INF/content/employee/index.jsp</result>
        </action>
        <!--查看自己的非正常出勤-->
        <action name="viewUnPunch" class="action.ViewUnAttendAction">
            <interceptor-ref name="empStack"></interceptor-ref>
            <result>/WEB-INF/content/employee/viewUnAttend.jsp</result>
        </action>
        <!--查看本人工资的action-->
        <action name="view*Salary" class="action.ViewSalaryAction">
            <interceptor-ref name="empStack"></interceptor-ref>
            <result>/WEB-INF/content/{1}/viewSalary.jsp</result>
        </action>
        <!--==================经理角色action================-->
        <!--经理查看上个月部门的全部工资-->
        <action name="viewDeptSal" class="action.ViewDeptAction">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <result>/WEB-INF/content/manager/viewDeptSal.jsp</result>
        </action>
        <!--经理查看员工-->
        <action name="viewEmp" class="action.ViewEmpAction">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <result>/WEB-INF/content/manager/viewEmp.jsp</result>
        </action>
        <!--经理查看申请-->
        <action name="viewApp" class="action.ViewAppAction">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <result>/WEB-INF/content/manager/viewApps.jsp</result>
        </action>
        <!--经理处理申请-->
        <action name="check" class="action.CheckAppAction">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <result type="chain">viewApp</result>
        </action>
        <!--进入添加员工-->
        <action name="addEmp">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <result>/WEB-INF/content/manager/addEmp.jsp</result>
        </action>
        <!--经理增加员工-->
        <action name="processAdd" class="action.AddEmpAction">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <interceptor-ref name="token"></interceptor-ref>
            <result name="invalid.token">/WEB-INF/content/manager/addEmp.jsp</result>
            <result name="input">/WEB-INF/content/manager/addEmp.jsp</result>
            <!--未知返回
            <result name="failure">/WEB-INF/content/manager/addEmp.jsp</result>-->
            <result>/WEB-INF/content/manager/index.jsp</result>
        </action>
        <!--经理删除员工-->
        <action name="delEmp" class="action.DelEmpAction">
            <interceptor-ref name="mgrStack"></interceptor-ref>
            <result name="input">/WEB-INF/content/manager/viewEmp.jsp</result>
            <result>/WEB-INF/content/manager/index.jsp</result>
        </action>

        <action name="*">
            <result>/WEB-INF/content/{1}.jsp</result>
        </action>
    </package>
</struts>